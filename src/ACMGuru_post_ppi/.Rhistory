# uniprotR ----
# install.packages('UniprotR')
library(UniprotR)
output_dir <- "../../data/ACMGuru_post_ppi/"
images_dir <- "../../images/ACMGuru_post_ppi_uniprotr/"
geneset_MCL_ID <- c(22, 586, 836)
print("Note here we import grouped_df_max_pathway_id")
grouped_df_max <- readRDS(paste0("../../data/ACMGuru_post_ppi/acmguru_gene_illustrate_grouped_df_max", paste(geneset_MCL_ID, collapse="_"), ".Rds"))
df_report <- readRDS(paste0("../../data/ACMGuru_post_ppi/acmguru_gene_illustrate_df_report", paste(geneset_MCL_ID, collapse="_"), ".Rds"))
df_report |> dplyr::select(SYMBOL) |> unique()
df_report |> dplyr::select(seqid) |> unique()
grouped_df_max|> dplyr::select(seqid) |> unique()
rm(list=setdiff(ls(), c("output_dir", "images_dir", "grouped_df_max", "df_report", "geneset_MCL_ID")))
# add pathway_id to grouped_df_max
grouped_df_max$seqid |> unique()
grouped_df_max$SYMBOL |> unique()
# read local copy ----
TaxaObj <- readRDS(file=paste(output_dir, "ontology_taxa/TaxaObj.Rds", sep = ""))
GeneOntologyObj <- readRDS(file=paste(output_dir, "ontology_taxa/GeneOntologyObj.Rds", sep = ""))
ProteinFunction <- readRDS(file=paste(output_dir, "ontology_taxa/ProteinFunction.Rds", sep = ""))
TaxaObj$seqid <- rownames(TaxaObj)
GeneOntologyObj$seqid <- rownames(GeneOntologyObj)
ProteinFunction$seqid <- rownames(ProteinFunction)
tmp <- df_report |> select(SYMBOL, pathway_id, seqid) |> unique()
TaxaObj <- merge(TaxaObj, tmp, all.x = T)
GeneOntologyObj <- merge(GeneOntologyObj, tmp, all.x = T)
ProteinFunction <- merge(ProteinFunction, tmp, all.x = T)
rm(tmp)
TaxaObj <- TaxaObj |> filter(!is.na(pathway_id))
GeneOntologyObj <- GeneOntologyObj |> filter(!is.na(pathway_id))
ProteinFunction <- ProteinFunction |> filter(!is.na(pathway_id))
Accessions_full <- df_report |> dplyr::select(SYMBOL, seqid, pathway_id) |> unique()
for (pathway in geneset_MCL_ID) {
#Visualize Chromosomes localization
p_chr <- PlotChromosomeInfo( (TaxaObj |> filter(pathway_id == pathway)))
p_chr
ggsave(paste(images_dir, "uniprotr_p_chr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_chr, width = 12, height = 8 )
#Combine Gene ontology plots into one plot
p_goi <- PlotGoInfo( (GeneOntologyObj |> filter(pathway_id == pathway)))
p_goi
ggsave(paste(images_dir, "uniprotr_p_goi_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_goi, width = 12, height = 8 )
# Enrichment analysis using KEGG, Reactome of protein list
Accessions <- Accessions_full |> filter(pathway_id == pathway) |> dplyr::select(seqid) |> unique() |> as_tibble()
p_kr <- Pathway.Enr(Accessions)
p_kr
ggsave(paste(images_dir, "uniprotr_p_kr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_kr, width = 12, height = 8 )
}
library(ggplot2)
Accessions <- df_report |> dplyr::select(seqid) |> unique()
Pathway.Enr(Accessions)
Accessions
str(Accessions)
Pathway.Enr(Accessions)
Accessions <- df_report |> dplyr::select(seqid) |> unique() |> as.data.frame()
Pathway.Enr(Accessions)
str(Accessions)
Accessions <- df_report |> dplyr::select(seqid) |> unique() |> as.list()
Accessions
Pathway.Enr(Accessions)
# Enrichment analysis using KEGG, Reactome of protein list
Accessions <- Accessions_full |> filter(pathway_id == pathway) |> dplyr::select(seqid) |> unique() |> as.list()
source("ACMGuru_gene_illustrate_vcurrent.R")
library(dplyr)
library(ggplot2)
# uniprotR ----
# install.packages('UniprotR')
library(UniprotR)
output_dir <- "../../data/ACMGuru_post_ppi/"
images_dir <- "../../images/ACMGuru_post_ppi_uniprotr/"
geneset_MCL_ID <- c(22, 586, 836)
print("Note here we import grouped_df_max_pathway_id")
grouped_df_max <- readRDS(paste0("../../data/ACMGuru_post_ppi/acmguru_gene_illustrate_grouped_df_max", paste(geneset_MCL_ID, collapse="_"), ".Rds"))
df_report <- readRDS(paste0("../../data/ACMGuru_post_ppi/acmguru_gene_illustrate_df_report", paste(geneset_MCL_ID, collapse="_"), ".Rds"))
df_report |> dplyr::select(SYMBOL) |> unique()
df_report |> dplyr::select(seqid) |> unique()
grouped_df_max|> dplyr::select(seqid) |> unique()
rm(list=setdiff(ls(), c("output_dir", "images_dir", "grouped_df_max", "df_report", "geneset_MCL_ID")))
# add pathway_id to grouped_df_max
grouped_df_max$seqid |> unique()
grouped_df_max$SYMBOL |> unique()
# read local copy ----
TaxaObj <- readRDS(file=paste(output_dir, "ontology_taxa/TaxaObj.Rds", sep = ""))
GeneOntologyObj <- readRDS(file=paste(output_dir, "ontology_taxa/GeneOntologyObj.Rds", sep = ""))
ProteinFunction <- readRDS(file=paste(output_dir, "ontology_taxa/ProteinFunction.Rds", sep = ""))
TaxaObj$seqid <- rownames(TaxaObj)
GeneOntologyObj$seqid <- rownames(GeneOntologyObj)
ProteinFunction$seqid <- rownames(ProteinFunction)
tmp <- df_report |> select(SYMBOL, pathway_id, seqid) |> unique()
TaxaObj <- merge(TaxaObj, tmp, all.x = T)
GeneOntologyObj <- merge(GeneOntologyObj, tmp, all.x = T)
ProteinFunction <- merge(ProteinFunction, tmp, all.x = T)
rm(tmp)
TaxaObj <- TaxaObj |> filter(!is.na(pathway_id))
GeneOntologyObj <- GeneOntologyObj |> filter(!is.na(pathway_id))
ProteinFunction <- ProteinFunction |> filter(!is.na(pathway_id))
Accessions_full <- df_report |> dplyr::select(SYMBOL, seqid, pathway_id) |> unique()
for (pathway in geneset_MCL_ID) {
#Visualize Chromosomes localization
p_chr <- PlotChromosomeInfo( (TaxaObj |> filter(pathway_id == pathway)))
p_chr
ggsave(paste(images_dir, "uniprotr_p_chr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_chr, width = 12, height = 8 )
#Combine Gene ontology plots into one plot
p_goi <- PlotGoInfo( (GeneOntologyObj |> filter(pathway_id == pathway)))
p_goi
ggsave(paste(images_dir, "uniprotr_p_goi_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_goi, width = 12, height = 8 )
# Enrichment analysis using KEGG, Reactome of protein list
Accessions <- Accessions_full |> filter(pathway_id == pathway) |> dplyr::select(seqid) |> unique() |> as.list()
p_kr <- Pathway.Enr(Accessions)
p_kr
ggsave(paste(images_dir, "uniprotr_p_kr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_kr, width = 12, height = 8 )
}
#Visualize Chromosomes localization
p_chr <- PlotChromosomeInfo( TaxaObj )
p_chr
ggsave(paste(images_dir, "uniprotr_p_chr", ".pdf", sep = "") , plot = p_chr, width = 12, height = 8 )
#Combine Gene ontology plots into one plot
p_goi <- PlotGoInfo(GeneOntologyObj)
p_goi
p_goi
ggsave(paste(images_dir, "uniprotr_p_goi", ".pdf", sep = "") , plot = p_goi, width = 12, height = 8 )
# Enrichment analysis using KEGG, Reactome of protein list
Accessions <- Accessions_full |> dplyr::select(seqid) |> unique() |> as.list()
p_kr <- Pathway.Enr(Accessions)
p_kr
ggsave(paste(images_dir, "uniprotr_p_kr", ".pdf", sep = "") , plot = p_kr, width = 12, height = 8 )
View(Accessions_full)
# loop on pathways ----
for (pathway in geneset_MCL_ID) {
print(paste("Running:", pathway))
#Visualize Chromosomes localization
p_chr <- PlotChromosomeInfo( (TaxaObj |> filter(pathway_id == pathway)))
# p_chr
ggsave(paste(images_dir, "uniprotr_p_chr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_chr, width = 15, height = 8 )
#Combine Gene ontology plots into one plot
p_goi <- PlotGoInfo( (GeneOntologyObj |> filter(pathway_id == pathway)))
# p_goi
ggsave(paste(images_dir, "uniprotr_p_goi_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_goi, width = 15, height = 8 )
# Enrichment analysis using KEGG, Reactome of protein list
Accessions <- Accessions_full |> filter(pathway_id == pathway) |> dplyr::select(seqid) |> unique() |> as.list()
p_kr <- Pathway.Enr(Accessions)
# p_kr
ggsave(paste(images_dir, "uniprotr_p_kr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_kr, width = 15, height = 8 )
}
# loop on pathways ----
for (pathway in geneset_MCL_ID) {
print(paste("Running:", pathway))
#Visualize Chromosomes localization
print(paste("chr..."))
p_chr <- PlotChromosomeInfo( (TaxaObj |> filter(pathway_id == pathway)))
# p_chr
ggsave(paste(images_dir, "uniprotr_p_chr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_chr, width = 15, height = 8 )
#Combine Gene ontology plots into one plot
print(paste("goi..."))
p_goi <- PlotGoInfo( (GeneOntologyObj |> filter(pathway_id == pathway)))
# p_goi
ggsave(paste(images_dir, "uniprotr_p_goi_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_goi, width = 15, height = 8 )
# Enrichment analysis using KEGG, Reactome of protein list
print(paste("kr..."))
Accessions <- Accessions_full |> filter(pathway_id == pathway) |> dplyr::select(seqid) |> unique() |> as.list()
p_kr <- Pathway.Enr(Accessions)
# p_kr
ggsave(paste(images_dir, "uniprotr_p_kr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_kr, width = 15, height = 8 )
}
# loop on pathways ----
for (pathway in geneset_MCL_ID) {
print(paste("Running:", pathway))
#Visualize Chromosomes localization
print(paste("chr..."))
p_chr <- PlotChromosomeInfo( (TaxaObj |> filter(pathway_id == pathway)))
# p_chr
ggsave(paste(images_dir, "uniprotr_p_chr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_chr, width = 15, height = 8 )
#Combine Gene ontology plots into one plot
print(paste("goi..."))
p_goi <- PlotGoInfo( (GeneOntologyObj |> filter(pathway_id == pathway)))
# p_goi
ggsave(paste(images_dir, "uniprotr_p_goi_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_goi, width = 15, height = 8 )
# Enrichment analysis using KEGG, Reactome of protein list
print(paste("filt..."))
Accessions <- Accessions_full |> filter(pathway_id == pathway) |> dplyr::select(seqid) |> unique() |> as.list()
print(paste("kr..."))
p_kr <- Pathway.Enr(Accessions)
# p_kr
ggsave(paste(images_dir, "uniprotr_p_kr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_kr, width = 15, height = 8 )
}
View(GeneOntologyObj)
GeneOntologyObj <- readRDS(file=paste(output_dir, "ontology_taxa/GeneOntologyObj.Rds", sep = ""))
View(GeneOntologyObj)
# read local copy ----
TaxaObj <- readRDS(file=paste(output_dir, "ontology_taxa/TaxaObj.Rds", sep = ""))
GeneOntologyObj <- readRDS(file=paste(output_dir, "ontology_taxa/GeneOntologyObj.Rds", sep = ""))
ProteinFunction <- readRDS(file=paste(output_dir, "ontology_taxa/ProteinFunction.Rds", sep = ""))
Accessions <- df_report |> dplyr::select(seqid) |> unique() |> as.list()
Accessions_full <- df_report |> dplyr::select(SYMBOL, seqid, pathway_id) |> unique()
output_dir <- "../../data/ACMGuru_post_ppi/"
images_dir <- "../../images/ACMGuru_post_ppi_uniprotr/"
geneset_MCL_ID <- c(22, 586, 836)
print("Note here we import grouped_df_max_pathway_id")
grouped_df_max <- readRDS(paste0("../../data/ACMGuru_post_ppi/acmguru_gene_illustrate_grouped_df_max", paste(geneset_MCL_ID, collapse="_"), ".Rds"))
df_report <- readRDS(paste0("../../data/ACMGuru_post_ppi/acmguru_gene_illustrate_df_report", paste(geneset_MCL_ID, collapse="_"), ".Rds"))
df_report |> dplyr::select(SYMBOL) |> unique()
df_report |> dplyr::select(seqid) |> unique()
grouped_df_max|> dplyr::select(seqid) |> unique()
rm(list=setdiff(ls(), c("output_dir", "images_dir", "grouped_df_max", "df_report", "geneset_MCL_ID")))
# add pathway_id to grouped_df_max
grouped_df_max$seqid |> unique()
grouped_df_max$SYMBOL |> unique()
Accessions_full <- df_report |> dplyr::select(SYMBOL, seqid, pathway_id) |> unique()
Accessions <- df_report |> dplyr::select(seqid) |> unique() |> as.list()
# read local copy ----
TaxaObj <- readRDS(file=paste(output_dir, "ontology_taxa/TaxaObj.Rds", sep = ""))
TaxaObj0 <- TaxaObj
View(TaxaObj0)
# Download ----
#Get Taxonomy Information
TaxaObj <- GetNamesTaxa(Accessions)
Accessions
Accessions <- df_report |> dplyr::select(seqid) |> unique()
# Download ----
#Get Taxonomy Information
TaxaObj <- GetNamesTaxa(Accessions)
# uniprotR ----
# install.packages('UniprotR')
library(UniprotR)
# Download ----
#Get Taxonomy Information
TaxaObj <- GetNamesTaxa(Accessions)
# Get Gene ontolgy Information
GeneOntologyObj <- GetProteinGOInfo(Accessions)
# GetProteinFunction
ProteinFunction <- GetProteinFunction(Accessions)
??GetNamesTaxa(0)
??GetNamesTaxa()
GetNamesTaxa("O14520")
# Download ----
#Get Taxonomy Information
TaxaObj <- GetNamesTaxa(Accessions)
Accessions_full <- df_report |> dplyr::select(SYMBOL, seqid, pathway_id) |> unique()
Accessions
Accessions <- df_report |> dplyr::select(seqid) |> unique()
Accessions <- df_report |> dplyr::select(seqid) |> unique() |> as.vector()
# Download ----
#Get Taxonomy Information
TaxaObj <- GetNamesTaxa(Accessions)
Accessions
grouped_df_max
grouped_df_max$seqid
Accessions <- grouped_df_max$seqid
# Download ----
#Get Taxonomy Information
TaxaObj <- GetNamesTaxa(Accessions)
GeneOntologyObj0 <- GeneOntologyObj
# Get Gene ontolgy Information
GeneOntologyObj <- GetProteinGOInfo(Accessions)
# Get Gene ontolgy Information
GeneOntologyObj <- GetProteinGOInfo(Accessions)
# GetProteinFunction
ProteinFunction <- GetProteinFunction(Accessions)
# save ----
saveRDS(TaxaObj, file=paste(output_dir, "ontology_taxa/TaxaObj.Rds", sep = ""))
saveRDS(GeneOntologyObj, file=paste(output_dir, "ontology_taxa/GeneOntologyObj.Rds", sep = ""))
saveRDS(ProteinFunction, file=paste(output_dir, "ontology_taxa/ProteinFunction.Rds", sep = ""))
# read local copy ----
TaxaObj <- readRDS(file=paste(output_dir, "ontology_taxa/TaxaObj.Rds", sep = ""))
GeneOntologyObj <- readRDS(file=paste(output_dir, "ontology_taxa/GeneOntologyObj.Rds", sep = ""))
ProteinFunction <- readRDS(file=paste(output_dir, "ontology_taxa/ProteinFunction.Rds", sep = ""))
TaxaObj$seqid <- rownames(TaxaObj)
GeneOntologyObj$seqid <- rownames(GeneOntologyObj)
ProteinFunction$seqid <- rownames(ProteinFunction)
tmp <- df_report |> select(SYMBOL, pathway_id, seqid) |> unique()
TaxaObj <- merge(TaxaObj, tmp, all.x = T)
GeneOntologyObj <- merge(GeneOntologyObj, tmp, all.x = T)
ProteinFunction <- merge(ProteinFunction, tmp, all.x = T)
rm(tmp)
TaxaObj <- TaxaObj |> filter(!is.na(pathway_id))
GeneOntologyObj <- GeneOntologyObj |> filter(!is.na(pathway_id))
ProteinFunction <- ProteinFunction |> filter(!is.na(pathway_id))
#Visualize Chromosomes localization
p_chr <- PlotChromosomeInfo( TaxaObj )
p_chr
ggsave(paste(images_dir, "uniprotr_p_chr", ".pdf", sep = "") , plot = p_chr, width = 12, height = 8 )
#Combine Gene ontology plots into one plot
p_goi <- PlotGoInfo(GeneOntologyObj)
p_goi
ggsave(paste(images_dir, "uniprotr_p_goi", ".pdf", sep = "") , plot = p_goi, width = 12, height = 8 )
# Enrichment analysis using KEGG, Reactome of protein list
Accessions_match <- Accessions_full |> dplyr::select(seqid) |> unique() |> as.list()
p_kr <- Pathway.Enr(Accessions_match)
p_kr
ggsave(paste(images_dir, "uniprotr_p_kr", ".pdf", sep = "") , plot = p_kr, width = 12, height = 8 )
ggsave(paste(images_dir, "uniprotr_p_kr", ".pdf", sep = "") , plot = p_kr, width = 10, height = 8 )
ggsave(paste(images_dir, "uniprotr_p_kr", ".pdf", sep = "") , plot = p_kr, width = 10, height = 7 )
ggsave(paste(images_dir, "uniprotr_p_kr", ".pdf", sep = "") , plot = p_kr, width = 8, height = 6 )
# loop on pathways ----
for (pathway in geneset_MCL_ID) {
print(paste("Running:", pathway))
#Visualize Chromosomes localization
print(paste("chr..."))
p_chr <- PlotChromosomeInfo( (TaxaObj |> filter(pathway_id == pathway)))
# p_chr
ggsave(paste(images_dir, "uniprotr_p_chr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_chr, width = 15, height = 8 )
#Combine Gene ontology plots into one plot
print(paste("goi..."))
p_goi <- PlotGoInfo( (GeneOntologyObj |> filter(pathway_id == pathway)))
# p_goi
ggsave(paste(images_dir, "uniprotr_p_goi_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_goi, width = 15, height = 8 )
# Enrichment analysis using KEGG, Reactome of protein list
print(paste("filt..."))
Accessions_match <- Accessions_full |> filter(pathway_id == pathway) |> dplyr::select(seqid) |> unique() |> as.list()
print(paste("kr..."))
p_kr <- Pathway.Enr(Accessions_match)
# p_kr
ggsave(paste(images_dir, "uniprotr_p_kr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_kr, width = 15, height = 8 )
}
# loop on pathways ----
for (pathway in geneset_MCL_ID) {
print(paste("Running:", pathway))
#Visualize Chromosomes localization
print(paste("chr..."))
p_chr <- PlotChromosomeInfo( (TaxaObj |> filter(pathway_id == pathway)))
# p_chr
ggsave(paste(images_dir, "uniprotr_p_chr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_chr, width = 15, height = 8 )
#Combine Gene ontology plots into one plot
print(paste("goi..."))
p_goi <- PlotGoInfo( (GeneOntologyObj |> filter(pathway_id == pathway)))
# p_goi
ggsave(paste(images_dir, "uniprotr_p_goi_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_goi, width = 18, height = 8 )
# Enrichment analysis using KEGG, Reactome of protein list
print(paste("filt..."))
Accessions_match <- Accessions_full |> filter(pathway_id == pathway) |> dplyr::select(seqid) |> unique() |> as.list()
print(paste("kr..."))
p_kr <- Pathway.Enr(Accessions_match)
# p_kr
ggsave(paste(images_dir, "uniprotr_p_kr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_kr, width = 8, height = 6 )
}
geneset_MCL_ID
paste(images_dir, "uniprotr_p_chr_merged", geneset_MCL_ID, ".pdf", sep = "")
paste(geneset_MCL_ID)
paste(geneset_MCL_ID, sep = "_")
paste0(geneset_MCL_ID, sep = "_")
file_name <- paste0(images_dir, "uniprotr_p_chr_merged_", geneset_MCL_ID, ".pdf")
file_name
str(geneset_MCL_ID)
geneset_MCL_ID_str <- paste(geneset_MCL_ID, collapse = "_")
geneset_MCL_ID_str
geneset_MCL_ID_str <- paste(geneset_MCL_ID, collapse = "_")
#Visualize Chromosomes localization
p_chr <- PlotChromosomeInfo( TaxaObj )
p_chr
ggsave(paste(images_dir, "uniprotr_p_chr_merged_", geneset_MCL_ID_str, ".pdf", sep = "") , plot = p_chr, width = 12, height = 8 )
#Combine Gene ontology plots into one plot
p_goi <- PlotGoInfo(GeneOntologyObj)
p_goi
ggsave(paste(images_dir, "uniprotr_p_goi_merged_", geneset_MCL_ID_str, ".pdf", sep = "") , plot = p_goi, width = 12, height = 8 )
# Enrichment analysis using KEGG, Reactome of protein list
Accessions_match <- Accessions_full |> dplyr::select(seqid) |> unique() |> as.list()
p_kr <- Pathway.Enr(Accessions_match)
p_kr
ggsave(paste(images_dir, "uniprotr_p_kr_merged_", geneset_MCL_ID_str, ".pdf", sep = "") , plot = p_kr, width = 8, height = 6 )
p_goi
ggsave(paste(images_dir, "uniprotr_p_goi_merged_", geneset_MCL_ID_str, ".pdf", sep = "") , plot = p_goi, width = 12, height = 10 )
#Combine Gene ontology plots into one plot
p_goi <- PlotGoInfo(GeneOntologyObj)
p_goi
ggsave(paste(images_dir, "uniprotr_p_goi_merged_", geneset_MCL_ID_str, ".pdf", sep = "") , plot = p_goi, width = 12, height = 10 )
ggsave(paste(images_dir, "uniprotr_p_goi_merged_", geneset_MCL_ID_str, ".pdf", sep = "") , plot = p_goi, width = 12, height = 9 )
ggsave(paste(images_dir, "uniprotr_p_goi_merged_", geneset_MCL_ID_str, ".pdf", sep = "") , plot = p_goi, width = 12, height = 10 )
p_goi
p_chr
p_kr
ggsave(paste(images_dir, "uniprotr_p_kr_merged_", geneset_MCL_ID_str, ".pdf", sep = "") , plot = p_kr, width = 10, height = 6 )
source("ACMGuru_gene_illustrate_vcurrent.R")
library(dplyr)
library(ggplot2)
# uniprotR ----
# install.packages('UniprotR')
library(UniprotR)
output_dir <- "../../data/ACMGuru_post_ppi/"
images_dir <- "../../images/ACMGuru_post_ppi_uniprotr/"
geneset_MCL_ID <- c(22, 586, 836)
print("Note here we import grouped_df_max_pathway_id")
grouped_df_max <- readRDS(paste0("../../data/ACMGuru_post_ppi/acmguru_gene_illustrate_grouped_df_max", paste(geneset_MCL_ID, collapse="_"), ".Rds"))
df_report <- readRDS(paste0("../../data/ACMGuru_post_ppi/acmguru_gene_illustrate_df_report", paste(geneset_MCL_ID, collapse="_"), ".Rds"))
df_report |> dplyr::select(SYMBOL) |> unique()
df_report |> dplyr::select(seqid) |> unique()
grouped_df_max|> dplyr::select(seqid) |> unique()
rm(list=setdiff(ls(), c("output_dir", "images_dir", "grouped_df_max", "df_report", "geneset_MCL_ID")))
# add pathway_id to grouped_df_max
grouped_df_max$seqid |> unique()
grouped_df_max$SYMBOL |> unique()
Accessions_full <- df_report |> dplyr::select(SYMBOL, seqid, pathway_id) |> unique()
# Accessions <- df_report |> dplyr::select(seqid) |> unique() |> as.vector()
Accessions <- grouped_df_max$seqid
# Download ----
#Get Taxonomy Information
TaxaObj <- GetNamesTaxa(Accessions)
# read local copy ----
TaxaObj <- readRDS(file=paste(output_dir, "ontology_taxa/TaxaObj.Rds", sep = ""))
GeneOntologyObj <- readRDS(file=paste(output_dir, "ontology_taxa/GeneOntologyObj.Rds", sep = ""))
ProteinFunction <- readRDS(file=paste(output_dir, "ontology_taxa/ProteinFunction.Rds", sep = ""))
TaxaObj$seqid <- rownames(TaxaObj)
GeneOntologyObj$seqid <- rownames(GeneOntologyObj)
ProteinFunction$seqid <- rownames(ProteinFunction)
tmp <- df_report |> select(SYMBOL, pathway_id, seqid) |> unique()
TaxaObj <- merge(TaxaObj, tmp, all.x = T)
GeneOntologyObj <- merge(GeneOntologyObj, tmp, all.x = T)
ProteinFunction <- merge(ProteinFunction, tmp, all.x = T)
rm(tmp)
TaxaObj <- TaxaObj |> filter(!is.na(pathway_id))
GeneOntologyObj <- GeneOntologyObj |> filter(!is.na(pathway_id))
ProteinFunction <- ProteinFunction |> filter(!is.na(pathway_id))
geneset_MCL_ID_str <- paste(geneset_MCL_ID, collapse = "_")
#Visualize Chromosomes localization
p_chr <- PlotChromosomeInfo( TaxaObj )
p_chr
#Combine Gene ontology plots into one plot
p_goi <- PlotGoInfo(GeneOntologyObj)
p_goi
# Enrichment analysis using KEGG, Reactome of protein list
Accessions_match <- Accessions_full |> dplyr::select(seqid) |> unique() |> as.list()
p_kr <- Pathway.Enr(Accessions_match)
p_kr
# loop on pathways ----
for (pathway in geneset_MCL_ID) {
print(paste("Running:", pathway))
#Visualize Chromosomes localization
print(paste("chr..."))
p_chr <- PlotChromosomeInfo( (TaxaObj |> filter(pathway_id == pathway)))
# p_chr
ggsave(paste(images_dir, "uniprotr_p_chr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_chr, width = 15, height = 8 )
#Combine Gene ontology plots into one plot
print(paste("goi..."))
p_goi <- PlotGoInfo( (GeneOntologyObj |> filter(pathway_id == pathway)))
# p_goi
ggsave(paste(images_dir, "uniprotr_p_goi_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_goi, width = 18, height = 8 )
# Enrichment analysis using KEGG, Reactome of protein list
print(paste("filt..."))
Accessions_match <- Accessions_full |> filter(pathway_id == pathway) |> dplyr::select(seqid) |> unique() |> as.list()
print(paste("kr..."))
p_kr <- Pathway.Enr(Accessions_match)
# p_kr
ggsave(paste(images_dir, "uniprotr_p_kr_pathway_ID_", pathway, ".pdf", sep = "") , plot = p_kr, width = 8, height = 6 )
}
# get discussion ----
names(TaxaObj)
names(GeneOntologyObj)
GeneOntologyObj$seqid  <- rownames(GeneOntologyObj)
grouped_df_max_GO <- merge(grouped_df_max, GeneOntologyObj)
TaxaObj$seqid  <- rownames(TaxaObj)
grouped_df_max_GO_taxa <- merge(grouped_df_max_GO, TaxaObj)
ProteinFunction$seqid  <- rownames(ProteinFunction)
grouped_df_max_GO_taxa_funct <- merge(grouped_df_max_GO_taxa, ProteinFunction)
df_report_grouped_grouped_df_max_GO_taxa_funct <- merge(df_report, grouped_df_max_GO_taxa_funct)
df_report_discussion <-
df_report_grouped_grouped_df_max_GO_taxa_funct |>
dplyr::select(SYMBOL,
Protein.names,
"Gene.Ontology..molecular.function.",
"Function..CC."
) |>
unique()
geneset_MCL_ID
df_report_grouped_grouped_df_max_GO_taxa_funct
view(Actually thinking about it more, Luregn asked that we have it on the same day as IPS/Neo research to be able to invite more collabs. I think he will ask for a valid answer as to why we did not. My timetable is flexible, so I don't mind.)
view(df_report_grouped_grouped_df_max_GO_taxa_funct)
view()
df_report_grouped_grouped_df_max_GO_taxa_funct
ProteinFunction
ProteinFunction
df_report
grouped_df_max_GO_taxa_funct
GeneOntologyObj$seqid
GeneOntologyObj
# read local copy ----
TaxaObj <- readRDS(file=paste(output_dir, "ontology_taxa/TaxaObj.Rds", sep = ""))
GeneOntologyObj <- readRDS(file=paste(output_dir, "ontology_taxa/GeneOntologyObj.Rds", sep = ""))
ProteinFunction <- readRDS(file=paste(output_dir, "ontology_taxa/ProteinFunction.Rds", sep = ""))
TaxaObj$seqid <- rownames(TaxaObj)
GeneOntologyObj$seqid <- rownames(GeneOntologyObj)
ProteinFunction$seqid <- rownames(ProteinFunction)
GeneOntologyObj
GeneOntologyObj$seqid
# seqid used to merege which were added earlier
grouped_df_max_GO <- merge(grouped_df_max, GeneOntologyObj)
grouped_df_max_GO_taxa <- merge(grouped_df_max_GO, TaxaObj)
grouped_df_max_GO_taxa_funct <- merge(grouped_df_max_GO_taxa, ProteinFunction)
df_report_grouped_grouped_df_max_GO_taxa_funct <- merge(df_report, grouped_df_max_GO_taxa_funct)
df_report_discussion <-
df_report_grouped_grouped_df_max_GO_taxa_funct |>
dplyr::select(SYMBOL,
Protein.names,
"Gene.Ontology..molecular.function.",
"Function..CC."
) |>
unique()
View(df_report_discussion)
View(grouped_df_max_GO)
View(df_report)
df_report_discussion <-
df_report_grouped_grouped_df_max_GO_taxa_funct |>
dplyr::select(pathway_id, SYMBOL,
Protein.names,
"Gene.Ontology..molecular.function.",
"Function..CC."
) |>
unique()
View(df_report_discussion)
df_report_discussion <-
df_report_discussion |> arrange(pathway_id, SYMBOL)
readr::write_tsv(df_report_discussion, file=(paste0("../../data/ACMGuru_post_ppi/df_report_discussion_", paste(geneset_MCL_ID, collapse="_"), ".tsv"))
)
write.csv(df_report_discussion, file=(paste0("../../data/ACMGuru_post_ppi/df_report_discussion_", paste(geneset_MCL_ID, collapse="_"), ".csv")),
row.names = FALSE)
